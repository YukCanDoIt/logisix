plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

bootJar {
	enabled = true
}

jar {
	enabled = false
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenLocal()
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.0")
}

sourceSets {
	main {
		java {
			srcDir 'build/generated/querydsl'
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	options.compilerArgs += "-Aquerydsl.generatedSourcesDir=build/generated/querydsl"
}

configurations {
	querydsl.extendsFrom annotationProcessor
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Database & Hibernate
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.hibernate.orm:hibernate-core:6.1.7.Final'

	// Jakarta Persistence API
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"

	// QueryDSL
	implementation "com.querydsl:querydsl-core:5.0.0"
	implementation "com.querydsl:querydsl-collections"
	implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}